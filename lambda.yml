AWSTemplateFormatVersion: '2010-09-09'
Resources:
  Lambda:
    Type: "AWS::Lambda::Function"
    Properties:
      Handler: "index.handler"
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        ZipFile: >
          var response = require('cfn-response');
          exports.handler = function(event, context, callback) {
            var input = event.Value;
            console.log("H\u00e4llo from Lambda!");
            var responseData = {Value: input * 42};
            callback(null, responseData);
          };
      Runtime: "nodejs4.3"
  FailingLambda:
    Type: "AWS::Lambda::Function"
    Properties:
      Handler: "index.handler"
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        ZipFile: >
          var response = require('cfn-response');
          exports.handler = function(event, context, callback) {
            var input = event.Value;
            console.log("H\u00e4llo from Lambda!");
            callback("failed!");
          };
      Runtime: "nodejs4.3"
  BrokenLambda:
    Type: "AWS::Lambda::Function"
    Properties:
      Handler: "index.handler"
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        ZipFile: >
          var response = require('cfn-response');
          exports.handler = function(event, context, callback) {
            var input =
          };
      Runtime: "nodejs4.3"
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      Policies:
      - PolicyName: root
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:*
            Resource: arn:aws:logs:*:*:*
Outputs:
  Lambda:
    Value: !Ref  Lambda
  FailingLambda:
    Value: !Ref  FailingLambda
  BrokenLambda:
    Value: !Ref  BrokenLambda
  Region:
    Value: !Sub "Region: ${AWS::Region}"
